to market-explo
  ask joueurs [
    let blist shuffle (list "residue" "grain" "fertilizer" "manure" "small ruminant" "cattle" "donkey")
    let i 0
    let idplays idplay
    foreach blist [
      ;;random order of selling and buying. equal probability
      ifelse (random 100) > 50 [
        marche-sell-explo item i blist
        liens "1"  liens "2"  liens "3"  liens "4"
        
        if item 0[onfarm_inc + offfarm_inc] of farmers with [player = idplays] > 0 [
          marche-buy-explo item i blist
          liens "1"  liens "2"  liens "3"  liens "4"
        ]
      ][
        if item 0[onfarm_inc + offfarm_inc] of farmers with [player = idplays] > 0 [
          marche-buy-explo item i blist
          liens "1"  liens "2"  liens "3"  liens "4"
        ]
        
        marche-sell-explo item i blist
        liens "1"  liens "2"  liens "3"  liens "4"
        
      ]
      
      set i i + 1
    ]
    livupdate idplays
    set amount_buy 0
    set amount_sell 0
  ]
end


to marche-sell-explo [biomass]
  let psd pseudo
  let idplays idplay
  let arret 0
  let bonus1 0; poultry.bonus symbolize prices variations
  let bonus8c 0; concentrate
  let bonus10 0;for srum in dec, apr, june
  let bonus10m 0; for manure in apr, june
  let bonus20 0;for donkey in dec, apr, june
  let bonus30 0; for cows in dec, apr, june
  let bonus10gr 0; grain only
  let sell_whats biomass
  let sell_how_muchs 0
  ;let biom_weights biom_weight
  ;;prices adjustments according to period of year
  ifelse sell_whats != "grain" or sell_whats != "residue" or sell_whats != "conc" [
    if month = "December" or month = "April" or month = "June" [
      set bonus10 0 set bonus20 0 set bonus30 0 set bonus1 0]
  ]
  [
    if month = "April" or month = "June" [
      set bonus10gr 0 set bonus8c 0 set bonus10m 0]
  ]

  let etat ""
  let qsell 0
  if sell_whats = "concentrate" [set sell_whats "conc"]
  if sell_whats = "small ruminant" [set sell_whats "srum"]

  ifelse sell_whats != "cart" and sell_whats != "tricycle" and sell_whats != "poultry" [
    ask farmers with [player = idplays][
      set qsell count out-link-neighbors with [typo = sell_whats and [pcolor] of patch-here != white and hunger < 1]]
  ]
  [ifelse sell_whats = "cart" [set qsell item 0[ncart] of farmers with [player = idplays]][set qsell item 0[ntricycle] of farmers with [player = idplays]]]
  
  if sell_whats = "poultry" [set qsell item 0[npoultry] of farmers with [player = idplays]]
  
  if arret = 0 [
  if sell_whats = "fertilizer" [set qsell item 0[nfertilizer] of farmers with [player = idplays]]
  if sell_whats = "conc" [set qsell item 0[nconc] of farmers with [player = idplays]]
  if sell_whats = "grain" [set qsell item 0[ngrain] of farmers with [player = idplays]]
    if sell_whats = "manure" [set qsell item 0[nmanure] of farmers with [player = idplays]]
    ;show qsell
    ;show (range 0 (qsell + 1) 1)
    set sell_how_muchs one-of (range 0 (qsell + 1) 1)
    
    if sell_how_muchs > qsell [
      ;hubnet-send psd "warning" "Sender: you cannot sell more than you have. Please try again" 
      set arret 1]
    
    if arret = 0 [
      ifelse sell_whats != "cart" and sell_whats != "tricycle" and sell_whats != "poultry"
      and sell_whats != "tricycle" and sell_whats != "fertilizer" and sell_whats != "conc" and sell_whats != "manure"[
        ask farmers with [player = idplays][
          
          if sell_whats = "grain" [
            let gr out-link-neighbors with [typo = sell_whats and hunger = 0 and size != 0 and [pcolor] of patch-here != white and color != magenta]
            if count gr > 0 [
              set bonus10gr (1 * count gr with [color != yellow and color != blue] + 2 * count gr with [color = yellow or color = blue]) / count gr ;;average price
            ]
          ]
          
          ifelse sell_whats != "grain" and sell_whats != "residue"[
            ask n-of sell_how_muchs out-link-neighbors with [typo = sell_whats and hunger = 0 and size != 0 and [pcolor] of patch-here != white][
              set etat state
              die
            ]
            
          ][
            if sell_whats = "grain" [
              let maxgr count out-link-neighbors with [typo = sell_whats and hunger = 0 and size != 0 and [pcolor] of patch-here != white and color != magenta]
              if sell_how_muchs >  maxgr [set sell_how_muchs maxgr]
              ask n-of sell_how_muchs out-link-neighbors with [typo = sell_whats and hunger = 0 and size != 0 and [pcolor] of patch-here != white and color != magenta][
                set etat state
                die
              ]
            ]
            if sell_whats = "residue" [
              let maxrsd count out-link-neighbors with [typo = sell_whats and hunger = 0 and size != 0 and [pcolor] of patch-here != white and color != blue and color != magenta]
              if sell_how_muchs >  maxrsd [set sell_how_muchs maxrsd]
              ask n-of sell_how_muchs out-link-neighbors with [typo = sell_whats and hunger = 0 and size != 0 and [pcolor] of patch-here != white and color != blue and color != magenta][
                set etat state
                die
              ]
            ]
            
            
          ]
          if sell_whats = "cattle" [
            set onfarm_inc onfarm_inc + (10 + bonus30) * sell_how_muchs; * sell_how_much
          ]
          if sell_whats = "srum" [
            set onfarm_inc onfarm_inc + (3 + bonus10) * sell_how_muchs
          ]
          if sell_whats = "donkey" [
            set onfarm_inc onfarm_inc + (5 + bonus20) * sell_how_muchs
          ]
          if sell_whats = "residue" [set onfarm_inc onfarm_inc + (0.5 + bonus10m) * sell_how_muchs]
          if sell_whats = "grain" [set onfarm_inc onfarm_inc + (bonus10gr) * sell_how_muchs]
        ]
      ][
    ask farmers with [player = idplays][
      ifelse sell_whats = "cart" or sell_whats = "tricycle" [
            if sell_whats = "cart" [set onfarm_inc onfarm_inc + 10 * sell_how_muchs]
            if sell_whats = "tricycle" [set onfarm_inc onfarm_inc + 20 * sell_how_muchs]]
          [if sell_whats = "poultry"[set onfarm_inc onfarm_inc + (1 + bonus10m) * (sell_how_muchs)];1 or 2 unit(s) of money = 1 poultry
            if sell_whats = "fertilizer" [set onfarm_inc onfarm_inc + 1 * sell_how_muchs]
            if sell_whats = "conc" [set onfarm_inc onfarm_inc + (2 + bonus8c) * sell_how_muchs]
            if sell_whats = "manure" [set onfarm_inc onfarm_inc + (1) * sell_how_muchs]
          ]
          let sz 0
          if sell_whats != "poultry" [set sz 1]
            ask n-of sell_how_muchs out-link-neighbors with [typo = sell_whats and hunger = 0 and size != sz and [pcolor] of patch-here != white][
              die
            ]
      ]]
      let tbuysell []
      set tbuysell fput "sell" tbuysell
      set tbuysell fput month tbuysell
      set tbuysell fput year tbuysell
      set tbuysell fput sim tbuysell
      set tbuysell lput idplays tbuysell 
      set tbuysell lput sell_whats tbuysell
      set tbuysell lput sell_how_muchs tbuysell
      
      ifelse (file-exists? (word "outputs/" "resmarket_" sim ".csv")) = false[
        ifelse length tbuysell = 0 [
          set buysell (list headmarket tbuysell) 
        ]
        [set buysell sentence buysell (list tbuysell)]
      ][
        if length buysell = 0 [
          file-open (word "outputs/" "resmarket_" sim ".csv")
          set buysell csv:from-file (word "outputs/" "resmarket_" sim ".csv")
          file-close
        ]
        set buysell sentence buysell (list tbuysell)
      ]
      ;set buysell (list buysell "sell" idplays sell_whats sell_how_muchs biom_weights);; used as output to track selling. see exportresults.nls
      ;file-open (word "resmarket.txt")
      ;file-print buysell
      ;file-close
      ;set buysell []
    ]
  ]
end

to marche-buy-explo [biomass]
  let psd pseudo
  let idplays idplay
  let arret 0
  let bonus1 0; poultry.bonus symbolize prices variations
  let bonus8c 0; concentrate
  let bonus10 0;for srum in dec, apr, june
  let bonus10m 0; for residue in apr, june
  let bonus20 0;for donkey in dec, apr, june
  let bonus30 0; for cows in dec, apr, june
  let bonus10gr 0; grain only
  let buy_whats biomass
  let buy_how_muchs 0
  ;;prices adjustments according to period of year
  ifelse buy_whats != "grain" or buy_whats != "residue" or buy_whats != "conc" [
    if month = "December" or month = "April" or month = "June" [
      set bonus10 0 set bonus20 0 set bonus30 0 set bonus1 0]
  ]
  [
    if month = "April" or month = "June" [
      set bonus10gr 0 set bonus8c 0 set bonus10m 0]
  ]

  let etat ""
  let qbuy 0
  ask patches with [plabel = ""][set plabel "99"]
  if buy_whats = "concentrate" [set buy_whats "conc"]
  if buy_whats = "small ruminant" [set buy_whats "srum"]

  ifelse (buy_whats != "cart" and buy_whats != "tricycle")[
    ask farmers with [player = idplays][
      let inc onfarm_inc + offfarm_inc
      if buy_whats = "cattle" [
        set buy_how_muchs one-of (range 0 ((inc / (10 + bonus30)) + 1) 1)
        set qbuy (10 + bonus30) * buy_how_muchs
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]

        if buy_whats = "srum" [
        set buy_how_muchs one-of (range 0 ((inc / (3 + bonus10)) + 1) 1)
        set qbuy (3 + bonus10) * buy_how_muchs
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]
      
      if buy_whats = "donkey" [
        set buy_how_muchs one-of (range 0 ((inc / (5 + bonus20)) + 1) 1)
        set qbuy (5 + bonus20) * buy_how_muchs
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1
        ] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]
      
      if buy_whats = "residue"[
        set buy_how_muchs one-of (range 0 ((inc / (0.5 + bonus10m)) + 1) 1)
        set qbuy (0.5 + bonus10m) * buy_how_muchs
        ;show inc show qbuy
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]
      
      if buy_whats = "grain" [
        set buy_how_muchs one-of (range 0 ((inc / (1 + bonus10gr)) + 1) 1)
        set qbuy (1 + bonus10gr) * buy_how_muchs;;assume always buy sorghum
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]
      
      if buy_whats = "conc"[
        set buy_how_muchs one-of (range 0 ((inc / (2 + bonus10)) + 1) 1)
        set qbuy (2 + bonus8c) * buy_how_muchs
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]
      
      if buy_whats = "manure" [
        set buy_how_muchs one-of (range 0 ((inc / (1)) + 1) 1)
        set qbuy (1) * buy_how_muchs
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]
      

      if buy_whats = "poultry" [
        set buy_how_muchs one-of (range 0 ((inc / (1 + bonus10m)) + 1) 1)
        set qbuy (1 + bonus10m) * (buy_how_muchs)
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy set npoultry npoultry - buy_how_muchs]
        ]
      ]
      
      if buy_whats = "fertilizer" [
        set buy_how_muchs one-of (range 0 ((inc / (1)) + 1) 1)
        set qbuy 1 * buy_how_muchs
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]
      
      if buy_whats = "transhumance" [
        set buy_how_muchs one-of (range 0 ((inc / (25 + bonus10)) + 1) 1)
        let nbov item 0 [ncow] of farmers with [player = idplays]
        ifelse nbov > buy_how_muchs [set qbuy 25 * buy_how_muchs]
        [set qbuy 3 * nbov];;player does not pay more by mistake
        ifelse inc < qbuy [
          ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
          set arret 1] [
          ifelse qbuy > onfarm_inc[
            set offfarm_inc inc - qbuy
            set onfarm_inc 0
          ][set onfarm_inc onfarm_inc - qbuy]
        ]
      ]
      
      
      if arret = 0 [
        ifelse buy_whats != "transhumance"[
          ask one-of turtles with [typo = buy_whats][
            hatch buy_how_muchs[
              set farm item 0[farm] of farmers with [player = idplays]
              set pos item 0[pos] of farmers with [player = idplays]
              set label farm
              
              if buy_whats = "residue" [set shape "star" set hidden? true]
              if buy_whats = "conc" [set shape "lightning"]
              set farm item 0 [farm] of farmers with [player = idplays]
              if buy_whats != "poultry" and buy_whats != "conc"
              [set canmove "yes"
                move-to one-of patches with [(read-from-string plabel) = (item 0[pos] of farmers with [player = idplays]) and pcolor != white and cultiv = "yes"]
                if any? patches with [(read-from-string plabel) = (item 0[pos] of farmers with [player = idplays]) and
                  count turtles-here < 2 and pcolor != white and cultiv = "yes"]
                [move-to one-of patches with [(read-from-string plabel) = (item 0[pos] of farmers with [player = idplays]) and
                  count turtles-here < 2 and pcolor != white and cultiv = "yes"]]
                
                if any? patches with [(read-from-string plabel) = (item 0[pos] of farmers with [player = idplays]) and
                  count turtles-here = 0 and pcolor != white and cultiv = "yes"]
                [move-to one-of patches with [(read-from-string plabel) = (item 0[pos] of farmers with [player = idplays]) and
                  count turtles-here = 0 and pcolor != white and cultiv = "yes"]]
                
              ]
              
              if buy_whats = "cattle" or buy_whats = "srum" or buy_whats = "donkey"[
                set state "skinny" set hunger 0
                ifelse month = "April" [set grazed "yes" set energy 4][set grazed "" set energy 0]
                set farm item 0[farm] of farmers with [player = idplays]
                set pos item 0[pos] of farmers with [player = idplays]
                set label farm
                set canmove "yes"
                move-to one-of patches with [pcolor = rgb 0 100 0]
              ]
              
              if buy_whats = "cattle" [set color 85 set size 1.25]
              if buy_whats = "srum" [set color 9.9 set size .75]
              if buy_whats = "donkey" [set color 5 set size 1]
              
              if buy_whats = "fertilizer" [set color 96 set size .75 set heading one-of (range 0 360 45) set canmove 0];;used in sow
              if buy_whats = "manure" [set color 36 set size .75 set heading one-of (range 0 360 45) set canmove 0]
              if buy_whats = "grain" [set color red set size .75 set shape "cylinder" set hidden? true]
              liens item 0 [farm] of farmers with [player = idplays]
            ]
          ]
        ]
        [
          ask farmers with [player = idplays][
            ask n-of buy_how_muchs out-link-neighbors with [shape = "cow" and canmove = "yes"] [
            set hidden? true set canmove "no"
            ]
          ]
        ]
        let tbuysell []
        set tbuysell fput "buy" tbuysell
        set tbuysell fput month tbuysell
        set tbuysell fput year tbuysell
        set tbuysell fput sim tbuysell
        set tbuysell lput idplays tbuysell 
        set tbuysell lput buy_whats tbuysell
        set tbuysell lput buy_how_muchs tbuysell
        
        ifelse (file-exists? (word "outputs/" "resmarket_" sim ".csv")) = false[
          ifelse length tbuysell = 0 [
            set buysell (list headmarket tbuysell) 
          ]
          [set buysell sentence buysell (list tbuysell)]
        ][
          if length buysell = 0 [
            file-open (word "outputs/" "resmarket_" sim ".csv")
            set buysell csv:from-file (word "outputs/" "resmarket_" sim ".csv")
            file-close
          ]
          set buysell sentence buysell (list tbuysell)
        ]
        ;set buysell (list buysell "buy" idplays buy_whats buy_how_muchs) ;; used as output to track buying
        ;file-open (word "resmarket.txt")
        ;file-print buysell
        ;file-close
        ;set buysell []
      ]
      
    ]
  ][
    ask farmers with [player = idplays][
      let inc onfarm_inc + offfarm_inc
      if buy_whats = "cart" [set qbuy 10 * buy_how_muchs]
      if buy_whats = "tricycle" [set qbuy 20 * buy_how_muchs]
      ifelse inc < qbuy [
        ;;hubnet-send psd "warning" "You do not have enough money. Please try again" 
        set arret 1] [
        ifelse qbuy > onfarm_inc[
          set offfarm_inc inc - qbuy
          set onfarm_inc 0
        ][set onfarm_inc onfarm_inc - qbuy]
      ]
      
      if arret = 0 [
        ask one-of out-link-neighbors with [typo = buy_whats][
          hatch buy_how_muchs[
            set farm item 0 [farm] of farmers with [player = idplays]
            liens item 0 [farm] of farmers with [player = idplays]
          ]
        ]
      ]
      
    ]
  ]
  ask patches with [plabel = "99"][set plabel ""]
end

